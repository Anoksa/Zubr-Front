import { Sphere } from "../interface/sphere";

export class PROGRAMMING {

  private static nameSphere: string = "programming";

  private static viewNameRU: string = "Программирование 10 класс";
  private static viewNameBE: string = "Праграміраванне 10 клас";
  private static viewNameEN: string = "Programming 10th grade";

  private static descriptionRU: string = "Программирование – это процесс создания компьютерных программ.";
  private static descriptionBE: string = "Праграміраванне - гэта працэс стварэння камп'ютарных праграм.";
  private static descriptionEN: string = "Programming is the process of creating computer programs.";

  private static contentRU: string = `
        <ol>
            <li>ОБЩИЕ ПОЛОЖЕНИЯ</li>
        </ol>
        <p>Программирование &ndash; это процесс создания компьютерных программ.</p>
        <ol start="2">
            <li>О СОРЕВНОВАНИИ</li>
        </ol>
        <p>Задачи можно решать с помощью любого языка программирования: Python, Java, C#, C++, C и др.</p>
        <ol start="3">
            <li>ТРЕБОВАНИЯ К УЧАСТНИКАМ</li>
        </ol>
        <p>Для выполнения задания участники должны владеть знаниями и навыками:</p>
        <p>- владеть одним из языков программирования: C/C#, Python, Java и др.;</p>
        <p>- уметь пользоваться соответствующими редакторами кода: Visual Studio, Intellij IDEA, PyCharm и др.;</p>
        <p>- уметь пользоваться графическими библиотеками/модулями соответствующих редакторов (WF/WPF, JavaFX и прочие);</p>
        <p>- уметь пользоваться основными принципами ООП;</p>
        <p>- обладать достаточными знаниями для работы с основными рабочими единицами кода (переменными, включая типы и ссылки,
            классами, массивами).</p>
        <p>Во время выполнения задания участника запрещено:</p>
        <p>- использовать интернет;</p>
        <p>- мобильное устройство;</p>
        <p>- просить помощь у руководителей в момент выполнения заданий.</p>
        <p>Программное обеспечение, которое должно быть установлено на ноутбуке участников:</p>
        <p>- редактор кода (Visual Studio, Intellij IDEA, PyCharm и др.);</p>
        <p>- соответствующие моду</p>
        <ol start="4">
            <li>КОНКУРСНОЕ ЗАДАНИЕ</li>
        </ol>
        <p>В данном задании участнику необходимо создать приложение, которое будет составлять календарь турниров.</p>
        <p>В республике проводится турнир по робофутболу, в котором каждая команда встречается в одно круговом турнире с каждой
            1 раз. За победу начисляется 3 очка, за ничью &ndash; 1 очко, за проигрыш 0 очков. По итогам турнира определяются 4
            лучшие команды, которые разыгрывают между собой 1 место по следующей схеме: команда, ставшая победителем кругового
            турнира, встречается с командой, занявшей 4 место, команда, занявшая 2 место, встречается с командой, занявший 3
            место. Победители матчей встречаются между собой в матче за первое место.</p>
        <p>Необходимо составить программу, которая будет:</p>
        <p>1) автоматически составлять календарь игр;</p>
        <p>2) вести учет результатов матчей календаря (будет позволять вводить счет каждой игры вручную);</p>
        <p>3) выводить итоговую турнирную таблицу (количество очков, побед, ничьих, проигрышей, разница забитых и пропущенных
            мячей);</p>
        <p>4) определять по итогам всего турнира 4 лучшие команды;</p>
        <p>5) определять команду, занявшую первое место.</p>
        <p>Входные данные:</p>
        <ul>
            <li>n (n&lt;=10) &ndash; количество команд;</li>
            <li>названия команд (n &ndash; слов).</li>
        </ul>
        <p>Выходные данные:</p>
        <ul>
            <li>название победившей команды;</li>
            <li>рейтинг турнира.</li>
        </ul>
        <p>Приложение должно быть с графическим интерфейсом.</p>
        <p>Разработка приложения для Windows не ниже 7.</p>
        <ol start="5">
            <li>КРИТЕРИИ ОЦЕНИВАНИЯ</li>
        </ol>
        <table>
            <tbody>
                <tr>
                    <td>
                        <p>Максимальное количество баллов</p>
                    </td>
                    <td>
                        <p>100</p>
                    </td>
                    <td>
                        <p>Примечания</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Из них:</p>
                    </td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <p>Работоспособность (правильные ответы при проверке на входных тестах)</p>
                    </td>
                    <td>
                        <p>30</p>
                    </td>
                    <td>
                        <p>Если программа в целом написано верно, но имеются быстро исправимые очевидные опечатки,
                            препятствующие
                            запуску, то при проверке возможна минимальная коррекция текста, а оценка будет снижена</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Оптимальность алгоритма (выбор способа реализации улучшающих время работы или использование памяти)
                        </p>
                    </td>
                    <td>
                        <p>20</p>
                    </td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <p>Оптимальные языковые конструкции (уместное использование сложных или, напротив простых
                            &laquo;читабельных&raquo; синтаксических конструкций, учет побочных эффектов)</p>
                    </td>
                    <td>
                        <p>10</p>
                    </td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <p>Полнота и уместность проверки входных данных (корректность условий проверки)</p>
                    </td>
                    <td>
                        <p>10</p>
                    </td>
                    <td>
                        <p>Оценивается только при ненулевой работоспособности</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Стиль кода (наличие стиля и структурирования, качество комментариев)</p>
                    </td>
                    <td>
                        <p>15</p>
                    </td>
                    <td>
                        <p>Оценивается только при ненулевой работоспособности</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>Интерфейс и грамотность (удобство ввода данных, правильность формулировок приглашений ко вводу и
                            пояснение
                            при выводе)</p>
                    </td>
                    <td>
                        <p>15</p>
                    </td>
                    <td>
                        <p>Оценивается только при ненулевой работоспособности</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ol start="6">
            <li>ПОРЯДОК ПРОВЕДЕНИЯ СОРЕВНОВАНИЙ</li>
        </ol>
        <p>Во время проведения конкурса участник должен знать и строго соблюдать правила безопасного поведения учащихся на
            конкурсной площадке</p>
        <p>За грубые нарушения правила безопасного поведения учащихся, которые привели к порче оборудования, инструмента, травме или созданию аварийной ситуации, участник отстраняется от дальнейшего участия в конкурсе. Решение об отстранении принимает главный судья.</p>
        <ol start="7">
            <li>ПРАВИЛА ОПРЕДЕЛЕНИЯ ПОБЕДИТЕЛЯ</li>
        </ol>
        <p>Участник, набравший наибольшее количество баллов за выполнение двух конкурсных заданий, считается победителем.</p>
        <p>В случае набора участниками одинакового количества баллов, победителем конкурса считается участник, набравший
            наибольшее количество баллов и выполнивший конкурсные задания за наименьшее время.</p>
        <p>В случае разногласий окончательное решение оценки конкурса принимает главный судья.</p>`;
  private static contentBE: string = `<ol>
<li>АГУЛЬНЫЯ ПАЛАЖЭННІ</li>
</ol>
<p>Программирование &ndash; это процесс создания компьютерных программ.</p>
<ol start="2">
<li>АБ СПАБОРНІЦТВЕ</li>
</ol>
<p>Задачы можна рашаць з дапамогай любой мовы праграміравання: Python, Java, C#, C++, C і інш.</p>
<ol start="3">
<li>ПАТРАБАВАННІ ДА ЎДЗЕЛЬНІКАЎ</li>
</ol>
<p>Для выканання задання ўдзельнікі павінны валодаць ведамі і навыкамі:</p>
<p>- валодаць адной з моў праграміравання: C/C#, Python, Java і інш.;</p>
<p>- умець карыстацца адпаведнымі рэдактарамі кода: Visual Studio, Intellij IDEA, PyCharm і інш.;</p>
<p>- умець карыстацца графічнымі бібліятэкамі/модулямі адпаведных рэдактараў (WF/WPF, JavaFX і іншыя);</p>
<p>- умець карыстацца асноўнымі прынцыпамі ААП;</p>
<p>- валодаць дастатковымі ведамі для працы з асноўнымі працоўнымі адзінкамі кода (зменнымі, уключаючы тыпы і спасылкі, класамі, масівамі).</p>
<p>&nbsp;Падчас выканання задання ўдзельнікам забаронена:</p>
<p>- выкарыстоўваць інтэрнэт і мабільныя прылады;</p>
<p>- прасіць дапамогу ў кіраўнікоў у момант выканання заданняў.</p>
<p>Праграмнае забеспячэнне, якое павінна быць устаноўлена на ноўтбуку ўдзельнікаў:</p>
<p>- рэдактар кода (Visual Studio, Intellij IDEA, PyCharm і інш.);</p>
<p>- адпаведныя модулі</p>
<ol start="4">
<li>КОНКУРСНАЕ ЗАДАННЕ</li>
</ol>
<p>У дадзеным заданні ўдзельніку неабходна стварыць дадатак, які будзе складаць каляндар турніраў.</p>
<p>У рэспубліцы праводзіцца турнір па робафутболе, у якім кожная каманда сустракаецца ў адным кругавым турніры з кожнай 1 раз. За перамогу налічваецца 3 балы, за нічыю - 1 бал, за пройгрыш 0 балаў. Па выніках турніру вызначаюцца 4 лепшыя каманды, якія разыгрываюць паміж сабой 1 месца па наступнай схеме: каманда, якая стала пераможцай кругавога турніру, сустракаецца з камандай, якая заняла 4 месца, каманда, якая заняла 2 месца, сустракаецца з камандай, якая заняла 3 месца. Пераможцы матчаў сустракаюцца паміж сабой у матчы за першае месца.</p>
<p>Неабходна скласці праграму, якая будзе:</p>
<p>1) аўтаматычна складаць каляндар гульняў;</p>
<p>2) весці ўлік вынікаў матчаў календара (будзе дазваляць уводзіць лік кожнай гульні ўручную);</p>
<p>3) выводзіць выніковую турнірную табліцу (колькасць балаў, перамог, нічыіх, пройгрышаў, розніца забітых і прапушчаных мячоў);</p>
<p>4) вызначаць па выніках усяго турніру 4 лепшыя каманды;</p>
<p>5) вызначаць каманду, якая заняла першае месца.</p>
<p>Уваходныя дадзеныя:</p>
<ul>
<li>n (n&lt;=10) &ndash; колькасць каманд;</li>
<li>назвы каманд (n &ndash; слоў).</li>
</ul>
<p>Выходныя дадзеныя:</p>
<ul>
<li>назва каманды, якая перамагла;</li>
<li>рэйтынг турніру.</li>
</ul>
<p>Дадатак павінен быць з графічным інтэрфейсам.</p>
<p>Распрацоўка прыкладання для Windows не ніжэй за 7.</p>
<ol start="5">
<li>
<p>КРЫТЭРЫІ АЦЭНЬВАННЯ</p>
</li>
</ol>
<table>
<tbody>
<tr>
<td>
<p>Максімальная колькасць балаў</p>
</td>
<td>
<p>100</p>
</td>
<td>
<p>Заўвагі</p>
</td>
</tr>
<tr>
<td>
<p>З іх:</p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>
<p>Працаздольнасць (правільныя адказы пры праверцы на ўваходных тэстах)</p>
</td>
<td>
<p>30</p>
</td>
<td>
<p>Калі праграма ў цэлым напісана дакладна, але маюцца хутка папраўныя відавочныя памылкі друку, якія перашкаджаюць запуску, то пры праверцы магчыма мінімальная карэкцыя тэксту, а адзнака будзе зніжана</p>
</td>
</tr>
<tr>
<td>
<p>Аптымальнасць алгарытму (выбар спосабу рэалізацыі часу, які паляпшае працу або выкарыстанне памяці)</p>
</td>
<td>
<p>20</p>
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>
<p>Аптымальныя моўныя канструкцыі (дарэчнае выкарыстанне складаных ці, насупраць, простых "чытальных" сінтаксічных канструкцый, улік пабочных эфектаў)</p>
</td>
<td>
<p>10</p>
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>
<p>Паўната і дарэчнасць праверкі ўваходных дадзеных (карэктнасць умоў праверкі)</p>
</td>
<td>
<p>10</p>
</td>
<td>
<p>Ацэньваецца толькі пры ненулявой працаздольнасці</p>
</td>
</tr>
<tr>
<td>
<p>Стыль кода (наяўнасць стылю і структуравання, якасць каментарыяў)</p>
</td>
<td>
<p>15</p>
</td>
<td>
<p>Ацэньваецца толькі пры ненулявой працаздольнасці</p>
</td>
</tr>
<tr>
<td>
<p>Інтэрфейс і пісьменнасць (выгада ўводу дадзеных, правільнасць фармуліровак запрашэнняў да ўводу і тлумачэнне пры выснове)</p>
</td>
<td>
<p>15</p>
</td>
<td>
<p>Ацэньваецца толькі пры ненулявой працаздольнасці</p>
</td>
</tr>
</tbody>
</table>
<ol start="6">
<li>ПАРАДАК ПРАВЯДЗЕННЯ СПАБОРНІЦТВАЎ</li>
</ol>
<p>У час правядзення конкурсу ўдзельнік павінен ведаць і строга выконваць правілы бяспечных паводзін вучняў на конкурснай пляцоўцы.</p>
<p>За грубыя парушэнні правіл бяспечных паводзін навучэнцаў, якія прывялі да псавання абсталявання, інструмента, траўмы або стварэння аварыйнай сітуацыі, удзельнік адхіляецца ад далейшага ўдзелу ў конкурсе. Рашэнне аб адхіленні прымае галоўны суддзя.</p>
<ol start="7">
<li>ПРАВІЛЫ ВЫЗНАЧЭННЯ ПЕРАМОЖЦЫ</li>
</ol>
<p>Удзельнік, які набраў найбольшую колькасць балаў за выкананне двух конкурсных заданняў, лічыцца пераможцам.</p>
<p>У выпадку набору ўдзельнікамі аднолькавай колькасці балаў, пераможцам конкурсу лічыцца ўдзельнік, які набраў найбольшую колькасць балаў і выканаў конкурсныя заданні за найменшы час.</p>
<p>У выпадку рознагалоссяў канчатковае рашэнне адзнакі конкурсу прымае галоўны суддзя.</p>`;
  private static contentEN: string = "Information is temporarily unavailable. You can view details in Russian or Belarusian languages";

  static getItem(currentLang: string): Sphere {

    let competence;

    if (currentLang == 'ru') {
      competence = this.ruTranslate;
    }
    else if (currentLang == 'be') {
      competence = this.beTranslate;
    }
    else {
      competence = this.enTranslate;
    }

    return competence
  }

  private static ruTranslate: Sphere = {
    name: this.nameSphere,
    viewName: this.viewNameRU,
    description: this.descriptionRU,
    content: this.contentRU
  }

  private static beTranslate: Sphere = {
    name: this.nameSphere,
    viewName: this.viewNameBE,
    description: this.descriptionBE,
    content: this.contentBE
  }

  private static enTranslate: Sphere = {
    name: this.nameSphere,
    viewName: this.viewNameEN,
    description: this.descriptionEN,
    content: this.contentEN
  }
}

//export const PROGRAMMING: Sphere = {
//    name: "programming",
//  viewName: "Праграміраванне 10 клас",
//  description: "Праграміраванне - гэта працэс стварэння камп'ютарных праграм.",
//    content: /*html*/`
//        <ol>
//            <li>ОБЩИЕ ПОЛОЖЕНИЯ</li>
//        </ol>
//        <p>Программирование &ndash; это процесс создания компьютерных программ.</p>
//        <ol start="2">
//            <li>О СОРЕВНОВАНИИ</li>
//        </ol>
//        <p>Задачи можно решать с помощью любого языка программирования: Python, Java, C#, C++, C и др.</p>
//        <ol start="3">
//            <li>ТРЕБОВАНИЯ К УЧАСТНИКАМ</li>
//        </ol>
//        <p>Для выполнения задания участники должны владеть знаниями и навыками:</p>
//        <p>- владеть одним из языков программирования: C/C#, Python, Java и др.;</p>
//        <p>- уметь пользоваться соответствующими редакторами кода: Visual Studio, Intellij IDEA, PyCharm и др.;</p>
//        <p>- уметь пользоваться графическими библиотеками/модулями соответствующих редакторов (WF/WPF, JavaFX и прочие);</p>
//        <p>- уметь пользоваться основными принципами ООП;</p>
//        <p>- обладать достаточными знаниями для работы с основными рабочими единицами кода (переменными, включая типы и ссылки,
//            классами, массивами).</p>
//        <p>Во время выполнения задания участника запрещено:</p>
//        <p>- использовать интернет;</p>
//        <p>- мобильное устройство;</p>
//        <p>- просить помощь у руководителей в момент выполнения заданий.</p>
//        <p>Программное обеспечение, которое должно быть установлено на ноутбуке участников:</p>
//        <p>- редактор кода (Visual Studio, Intellij IDEA, PyCharm и др.);</p>
//        <p>- соответствующие моду</p>
//        <ol start="4">
//            <li>КОНКУРСНОЕ ЗАДАНИЕ</li>
//        </ol>
//        <p>В данном задании участнику необходимо создать приложение, которое будет составлять календарь турниров.</p>
//        <p>В республике проводится турнир по робофутболу, в котором каждая команда встречается в одно круговом турнире с каждой
//            1 раз. За победу начисляется 3 очка, за ничью &ndash; 1 очко, за проигрыш 0 очков. По итогам турнира определяются 4
//            лучшие команды, которые разыгрывают между собой 1 место по следующей схеме: команда, ставшая победителем кругового
//            турнира, встречается с командой, занявшей 4 место, команда, занявшая 2 место, встречается с командой, занявший 3
//            место. Победители матчей встречаются между собой в матче за первое место.</p>
//        <p>Необходимо составить программу, которая будет:</p>
//        <p>1) автоматически составлять календарь игр;</p>
//        <p>2) вести учет результатов матчей календаря (будет позволять вводить счет каждой игры вручную);</p>
//        <p>3) выводить итоговую турнирную таблицу (количество очков, побед, ничьих, проигрышей, разница забитых и пропущенных
//            мячей);</p>
//        <p>4) определять по итогам всего турнира 4 лучшие команды;</p>
//        <p>5) определять команду, занявшую первое место.</p>
//        <p>Входные данные:</p>
//        <ul>
//            <li>n (n&lt;=10) &ndash; количество команд;</li>
//            <li>названия команд (n &ndash; слов).</li>
//        </ul>
//        <p>Выходные данные:</p>
//        <ul>
//            <li>название победившей команды;</li>
//            <li>рейтинг турнира.</li>
//        </ul>
//        <p>Приложение должно быть с графическим интерфейсом.</p>
//        <p>Разработка приложения для Windows не ниже 7.</p>
//        <ol start="5">
//            <li>КРИТЕРИИ ОЦЕНИВАНИЯ</li>
//        </ol>
//        <table>
//            <tbody>
//                <tr>
//                    <td>
//                        <p>Максимальное количество баллов</p>
//                    </td>
//                    <td>
//                        <p>100</p>
//                    </td>
//                    <td>
//                        <p>Примечания</p>
//                    </td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Из них:</p>
//                    </td>
//                    <td>&nbsp;</td>
//                    <td>&nbsp;</td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Работоспособность (правильные ответы при проверке на входных тестах)</p>
//                    </td>
//                    <td>
//                        <p>30</p>
//                    </td>
//                    <td>
//                        <p>Если программа в целом написано верно, но имеются быстро исправимые очевидные опечатки,
//                            препятствующие
//                            запуску, то при проверке возможна минимальная коррекция текста, а оценка будет снижена</p>
//                    </td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Оптимальность алгоритма (выбор способа реализации улучшающих время работы или использование памяти)
//                        </p>
//                    </td>
//                    <td>
//                        <p>20</p>
//                    </td>
//                    <td>&nbsp;</td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Оптимальные языковые конструкции (уместное использование сложных или, напротив простых
//                            &laquo;читабельных&raquo; синтаксических конструкций, учет побочных эффектов)</p>
//                    </td>
//                    <td>
//                        <p>10</p>
//                    </td>
//                    <td>&nbsp;</td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Полнота и уместность проверки входных данных (корректность условий проверки)</p>
//                    </td>
//                    <td>
//                        <p>10</p>
//                    </td>
//                    <td>
//                        <p>Оценивается только при ненулевой работоспособности</p>
//                    </td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Стиль кода (наличие стиля и структурирования, качество комментариев)</p>
//                    </td>
//                    <td>
//                        <p>15</p>
//                    </td>
//                    <td>
//                        <p>Оценивается только при ненулевой работоспособности</p>
//                    </td>
//                </tr>
//                <tr>
//                    <td>
//                        <p>Интерфейс и грамотность (удобство ввода данных, правильность формулировок приглашений ко вводу и
//                            пояснение
//                            при выводе)</p>
//                    </td>
//                    <td>
//                        <p>15</p>
//                    </td>
//                    <td>
//                        <p>Оценивается только при ненулевой работоспособности</p>
//                    </td>
//                </tr>
//            </tbody>
//        </table>
//        <ol start="6">
//            <li>ПОРЯДОК ПРОВЕДЕНИЯ СОРЕВНОВАНИЙ</li>
//        </ol>
//        <p>Во время проведения конкурса участник должен знать и строго соблюдать правила безопасного поведения учащихся на
//            конкурсной площадке</p>
//        <p>За грубые нарушения правила безопасного поведения учащихся, которые привели к порче оборудования, инструмента, травме или созданию аварийной ситуации, участник отстраняется от дальнейшего участия в конкурсе. Решение об отстранении принимает главный судья.</p>
//        <ol start="7">
//            <li>ПРАВИЛА ОПРЕДЕЛЕНИЯ ПОБЕДИТЕЛЯ</li>
//        </ol>
//        <p>Участник, набравший наибольшее количество баллов за выполнение двух конкурсных заданий, считается победителем.</p>
//        <p>В случае набора участниками одинакового количества баллов, победителем конкурса считается участник, набравший
//            наибольшее количество баллов и выполнивший конкурсные задания за наименьшее время.</p>
//        <p>В случае разногласий окончательное решение оценки конкурса принимает главный судья.</p>
//    `
//}
